PVector[] obstacles; 
int y =0;
  
  
void setup() {
    size(1350, 800);
    
    obstacles = new PVector[75];
    for (int i = 0; i < obstacles.length; i++) {
      float x = random(0, width);
      float y = random(0, 800);
      obstacles[i] = new PVector(x,y);
  }
  }
  
  void draw() { 
    background(255,255,255);
    //loop through the obstacles
    for (int i = 0;   i < obstacles.length; i++) {
      obstacles[i].add(-5,0);
      
    
  int m = millis();
  noStroke();
  fill(m % 20);
   textSize(32);
  text(m,10,30);


    
    //   if (obstacles[i].x + 1351 > width) {
      //obstacles[i].x = - 25;
      //obstacles[i].y = (int) random(1350, 800);
    //}
   // if (d <= r1+r2  //the radius of the obstacle and the character are a certain number
                     //distance apart, then print GAME OVER 
                     //https://processing.org/reference/ellipseMode_.html

     
      
  
    //draw obstacles (for now)
    noStroke();
    fill(51,51,255);  
     ellipse(obstacles[i].x, obstacles[i].y, 30,30);
  
    ellipse (30,y,30,30);
    fill(255,0,127);
      
  }
  }
  
  
  void keyPressed() {
    if (key == CODED) {
      if (keyCode == UP) {
        y -= 45;
      } else if (keyCode == DOWN) {
        y += 45;
      } 
    }
  }

